<% content_for(:page_header) do  %>
  <h2>Incentives for <%= @date.to_s(:short_month_and_year) %></h2>
  <%= sub_headers %>
  <%#= render :partial=>'sub_header' %>
<% end %>
<% unless @errors.blank? %>
  <%= activerecord_error_list(@errors) %>
<% end %>

<div>
  <span class="right"><%= link_to(@next_month.to_s(:short_month_and_year),bulk_new_salary_sheet_incentive_path(@next_month.to_s(:for_param))) %></span>
  <%= link_to(@prev_month.to_s(:short_month_and_year),bulk_new_salary_sheet_incentive_path(@prev_month.to_s(:for_param))) %>
</div>

<% unless @incentives.blank? %>
  <table cellpadding="0" cellspacing="0" width="100%" class="list">
    <thead>
      <tr>
        <th><%= t('common.employees') %></th>
        <th><%= t('common.description') %></th>
        <th class="numeric"><%= "#{t('common.totals')} #{t('common.incentives')} #{t('common.amount')}" %></th>
      </tr>
    </thead>
    <tfoot>
      <tr>
        <td colspan="2"><%= "#{t('common.grand')} #{t('common.total')}" %></td>
        <td class="numeric"><%= @incentives.sum('amount') %></td>
      </tr>
    </tfoot>
    <tbody>
      <% @incentives.each do |r| %>
        <tr class="<%= cycle("",:alt) %>">
          <td class="head1"><%=link_to(h(r.employee.name),employee_incentive_path(r.employee,r)) %></td>
          <td class="head2"><%=h r.description %></td>
          <td class="head3 numeric"><%=h r.amount %></td>
        </tr>
      <% end %>
    </tbody>
  </table>
<% end %>

<table cellpadding="0" cellspacing="0" width="100%" class="list">
  <thead>
    <tr>
      <th><%= t('common.employees') %></th>
      <th><%= t('common.amount') %></th>
      <th><%= t('common.description') %></th>
    </tr>
  </thead>
  <tbody>
    <% form_tag(bulk_create_incentives_path(:date => @date),:method=>:post) do %>
      <div id="incentives">
        <%= render :partial=>'incentive', :collection => @new_incentives %>
      </div>
      <tr><th class="submit" colspan="3"><%= submit_tag t('button.submit'), :class => "btn"  %></td></th>
    <% end %>
  </tbody>
</table>
